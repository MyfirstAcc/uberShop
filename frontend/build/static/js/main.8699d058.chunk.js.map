{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/CatalogScreen.js","screens/ProductScreen.js","components/FormContainer.js","screens/AboutScreen.js","actions/cartActions.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","_objectSpread","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","concat","_toConsumableArray","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","SearchBox","_useState","useState","_useState2","_slicedToArray","keyword","setKeyword","history","useHistory","_jsxs","Form","className","role","onSubmit","e","preventDefault","push","location","pathname","children","_jsx","Control","name","onChange","target","value","Button","variant","login","email","password","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","config","_yield$axios$post","data","wrap","_context","prev","next","headers","axios","post","sent","setItem","stringify","t0","response","detail","message","stop","_x","getUserDetails","id","_ref3","_callee3","getState","_getState","_yield$axios$get","_context3","Authorization","token","get","_x3","_x4","Header","useSelector","useDispatch","Navbar","bg","expand","rounded","LinkContainer","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Container","Row","Col","href","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","height","width","margin","display","Message","Alert","Paginate","_ref$keyword","_ref$isAdmin","split","Pagination","Array","keys","active","listProducts","listProductDetails","_yield$axios$get3","ProductCarousel","useEffect","_ref2","_callee2","_yield$axios$get2","_context2","_x2","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","window","ym","sm","md","lg","xl","CatalogScreen","ProductScreen","match","qty","setQty","_useState3","_useState4","setRating","_useState5","_useState6","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","review","createdAt","substring","productId","_ref7","_callee7","_getState4","_yield$axios$post2","_context7","_x10","_x11","Group","controlId","Label","row","FormContainer","LoginScreen","redirect","addToCart","CartScreen","Number","removeFromCartHandler","removeFromCart","reduce","acc","toFixed","setEmail","setPassword","placeholder","RegisterScreen","setName","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","_ref5","_callee5","_getState5","_context5","_x9","_ref4","_callee4","_getState2","_yield$axios$put","_context4","put","_x5","_x6","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","isDelivered","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","_getState3","payOrder","_yield$axios$put2","_x7","_x8","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","_ref6","_callee6","_yield$axios$delete","_context6","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","_x12","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","_useState11","_useState12","setCountInStock","_useState13","_useState14","setDescription","_useState15","_useState16","uploading","setUploading","uploadFileHandler","file","formData","files","FormData","append","updateProduct","File","custom","OrderListScreen","_getState6","App","Router","Route","path","component","exact","AboutScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.8699d058.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"d-flex\" role=\"search\" onSubmit={submitHandler}>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Поиск\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" rounded aria-label=\"Eleventh navbar example\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <LinkContainer to='/'>\r\n\r\n                        <Navbar.Brand>UberShop</Navbar.Brand>\r\n\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav mb-2 mb-md-0\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav \">\r\n\r\n                        <Nav className=\"me-auto\">\r\n                            <LinkContainer to='/catalog'>\r\n                                <Nav.Link><i className=\"fa fa-bars\"></i>Каталог</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Корзина</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Профиль</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Выйти</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Войти</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Пользователь</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Продукты</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Заказы</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                            <LinkContainer to='/about'>\r\n                                <Nav.Link ><i className=\"fa fa-info-circle\"></i>О нас</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n\r\n\r\n                        </Nav>\r\n                        <SearchBox />\r\n\r\n                    </Navbar.Collapse>\r\n                </div>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; ubsershop</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                   <Col className=\"text-center py-3\"> <a href=\"mailto:s.strt2011@yandex.ru\"> Моя почта </a> </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} отзыв`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    {product.price}₽\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Загрузка...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} ({product.price}₽)</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        window.ym(95251816, 'reachGoal', 'Главная страница');\r\n\r\n\r\n\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Новое Посутпление</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction CatalogScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (  \r\n        <h1>\r\n            Каталог\r\n        </h1>    \r\n    )\r\n}\r\n\r\nexport default CatalogScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Назад</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} оценки`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Цена: {product.price}₽\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Описание: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Цена:</Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price}₽</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Статус:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'В наличии' : 'Нет в наличии'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Кол-во</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Добавить в корзину\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Отзывы</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>Нет отзывов</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Написать отзыв</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Оставленные отзывы</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Оценка</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Выберите...</option>\r\n                                                            <option value='1'>1 - Ужасно</option>\r\n                                                            <option value='2'>2 - Плохо</option>\r\n                                                            <option value='3'>3 - Хорошо</option>\r\n                                                            <option value='4'>4 - Очень хорошо</option>\r\n                                                            <option value='5'>5 - Отлично</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Отправить\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Пожалуйста,  <Link to='/login'>войдите</Link>, чтобы оставить комментарий</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <section>\r\n      <h2>О нас</h2>\r\n      <p>\r\n        Добро пожаловать в мир электронной коммерции! Мы предоставляем...\r\n        {/* Добавьте описание вашей компании */}\r\n      </p>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Корзина</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Ваша корзина пуста.<Link to='/'>Назад</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            {item.price}₽\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Всего ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) товаров</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)} ₽\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Переход к оформлению\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Вход</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email адрес</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Введите Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Введите пароль'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Войти\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Новый пользователь? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Зарегистрируйтесь\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Пароли не совпадают!')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Регистарция</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Имя</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Введите имя'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email адресс</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Введите Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Пароль</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Введите Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Подтверждение пароля</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Подтвердите пароль'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Регистарция\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Уже есть аккаунт? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        войдите\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Пароли не сопадают!')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Профиль пользователя</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Имя</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Введите имя'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email адресс</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Введите Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Введите пароль'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Подтверждение пароля</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Подтвердите пароль'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Обновить\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>Мои заказы</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Дата</th>\r\n                                        <th>Сумма</th>\r\n                                        <th>Оплачен</th>\r\n                                        <th>Доставлен</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>{order.totalPrice}₽</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Детали</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Вход</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Доставка</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Опалата</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Оформление заказа</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Оформление заказа</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Доставка</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Адрес</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Ввелите адрес'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Город</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введите город'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Почтовый индекс</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введите почтовый индекс'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Страна</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Введите страну'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Выберите метод</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Продолжить\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((cart.itemsPrice * (0.20)) / 100).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)) \r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Доставка</h2>\r\n\r\n                            <p>\r\n                                <strong>Доставка: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Метод опалты</h2>\r\n                            <p>\r\n                                <strong>Метод: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Детали заказы</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Ваш заказ пуст\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X {item.price}₽ = {(item.qty * item.price).toFixed(2)}₽\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Краткое описание заказа</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Элементы:</Col>\r\n                                    <Col>{cart.itemsPrice}₽</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Доставка:</Col>\r\n                                    <Col>{cart.shippingPrice}₽</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Налог:</Col>\r\n                                    <Col>{cart.taxPrice}₽</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Всего к оплате:</Col>\r\n                                    <Col>{cart.totalPrice}₽</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Оформить заказ\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Заказ: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong> Имя: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Доставка: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Доставлен {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Не доставлен</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Метод оплаты</h2>\r\n                                    <p>\r\n                                        <strong>Метод: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Оплачен {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Не опалчен</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Детали заказа</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Заказ пуст\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X {item.price}₽ = {(item.qty * item.price).toFixed(2)}₽\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Описание заказа</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Товар:</Col>\r\n                                            <Col>{order.itemsPrice}₽</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Доставка:</Col>\r\n                                            <Col>{order.shippingPrice}₽</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>НДС:</Col>\r\n                                            <Col>{order.taxPrice}₽</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Всего:</Col>\r\n                                            <Col>{order.totalPrice}₽</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Пользователи</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Имя</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>Админ</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Назад\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Редактирование пользователя</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Имя</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email адрес</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Администратор'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Обновить\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Товары</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Добавить товар\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Наименование</th>\r\n                                        <th>Цена</th>\r\n                                        <th>Категория</th>\r\n                                        <th>Бренд</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.price}₽</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Назад\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Редактировать товар</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Наименование</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Введите наименование'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Цена</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Введите цену'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Изображение</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Выберите изображение'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Выбрать файл'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Бренд</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Введите бренд'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>На скаладе</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Введите запас'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Категория</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Введите категорию'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Описание</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Введите описание'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Обновить\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Заказы</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Пользователь</th>\r\n                                    <th>Дата</th>\r\n                                    <th>Сумма</th>\r\n                                    <th>Оплачен</th>\r\n                                    <th>Доставлен</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}₽</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Детали\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport CatalogScreen from './screens/CatalogScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport AboutScreen from './screens/AboutScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/catalog' component={CatalogScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/about' component={AboutScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}